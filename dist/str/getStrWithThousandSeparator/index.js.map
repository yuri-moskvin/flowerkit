{"version":3,"file":"index.js","sources":["../../../src/str/getStrWithThousandSeparator/index.js"],"sourcesContent":["import ow from \"ow\";\r\n\r\n/**\r\n * Gets a formatted string with thousands separators from given number\r\n * @param num{Number} - source number\r\n * @param separator{String=} - separator between every thousand\r\n * @return {string}\r\n * @example\r\n * // How to format a number with commas as thousands separators?\r\n * const str = getStrWithThousandSeparator(1000000, \",\");\r\n * console.log(str); // => \"1,000,000\"\r\n */\r\nconst getStrWithThousandSeparator = (num, separator = \" \") => {\r\n\r\n  ow(num, ow.number.not.infinite);\r\n  ow(separator, ow.optional.string);\r\n\r\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\r\n};\r\n\r\nexport {\r\n  getStrWithThousandSeparator\r\n};\r\n"],"names":["getStrWithThousandSeparator","num","separator","ow","number","not","infinite","optional","string","toString","replace"],"mappings":";;;;;;;;;;GAYMA,MAAAA,4BAA8BA,CAACC,IAAKC,UAAY,OAEpDC,GAAGF,IAAKE,GAAGC,OAAOC,IAAIC,UACtBH,GAAGD,UAAWC,GAAGI,SAASC,QAE1B,OAAOP,IAAIQ,WAAWC,QAAQ,wBAAyBR,UAAU"}