{"version":3,"file":"index.js","sources":["../../../src/str/getStrWithZeroFromNum/index.js"],"sourcesContent":["import ow from \"ow\";\r\n\r\n/**\r\n * Gets a string with leading zero\r\n * @param num{Number} - source number\r\n * @param digits{Number=} - number of digits in target string\r\n * @return {string}\r\n * @example\r\n * // How to add a leading zero to a number?\r\n * const num = 9;\r\n * const withZero = getStrWithZeroFromNumber(9, 3);\r\n * console.log(withZero); // => \"009\"\r\n */\r\nconst getStrWithZeroFromNum = (num, digits = 2) => {\r\n\r\n  ow(num, ow.number.not.infinite);\r\n  ow(digits, ow.number.not.infinite);\r\n\r\n  const absNum = Math.abs(num);\r\n  const paddedStr = Array(Math.max(digits - String(absNum).length + 1, 0)).join(0) + absNum;\r\n  const isNegative = num < 0;\r\n\r\n  return `${isNegative ? \"-\" : \"\"}${paddedStr}`;\r\n};\r\n\r\nexport {\r\n  getStrWithZeroFromNum\r\n};\r\n"],"names":["getStrWithZeroFromNum","num","digits","ow","number","not","infinite","absNum","Math","abs","paddedStr","Array","max","String","length","join","isNegative"],"mappings":";;;;;;;;;;;GAaMA,MAAAA,sBAAwBA,CAACC,IAAKC,OAAS,KAE3CC,GAAGF,IAAKE,GAAGC,OAAOC,IAAIC,UACtBH,GAAGD,OAAQC,GAAGC,OAAOC,IAAIC,UAEzB,MAAMC,OAASC,KAAKC,IAAIR,KACxB,MAAMS,UAAYC,MAAMH,KAAKI,IAAIV,OAASW,OAAON,QAAQO,OAAS,EAAG,IAAIC,KAAK,GAAKR,OACnF,MAAMS,WAAaf,IAAM,EAEzB,MAAQ,GAAEe,WAAa,IAAM,KAAKN,WAAW"}