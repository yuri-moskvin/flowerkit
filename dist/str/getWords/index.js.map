{"version":3,"file":"index.js","sources":["../../../src/str/getWords/index.js"],"sourcesContent":["import ow from \"ow\";\r\n\r\n/**\r\n * Gets separated words from string\r\n * @param str{String} - source string\r\n * @return {String[]}\r\n * @example\r\n * // How do I split a string into a list of words?\r\n * const str = \"helloWorld! what's_up?\";\r\n * const words = getWords(str);\r\n * console.log(words); // => [ \"hello\", \"World\", \"what\", \"s\", \"up\" ]\r\n */\r\nconst getWords = (str) => {\r\n\r\n  ow(str, ow.string);\r\n\r\n  const nonCharRegex = /[^a-zA-Z]+/g;\r\n  const camelCaseRegex = /([a-z])([A-Z])/g;\r\n\r\n  const replacer = (_, char1, char2) => char1 + \" \" + char2;\r\n\r\n  return str\r\n    .replace(camelCaseRegex,  replacer)\r\n    .split(nonCharRegex)\r\n    .filter(word => !!word.length);\r\n\r\n};\r\n\r\nexport {\r\n  getWords\r\n};\r\n"],"names":["getWords","str","ow","string","nonCharRegex","camelCaseRegex","replacer","_","char1","char2","replace","split","filter","word","length"],"mappings":";;;;;;;;;;GAYMA,MAAAA,SAAYC,MAEhBC,GAAGD,IAAKC,GAAGC,QAEX,MAAMC,aAAe,cACrB,MAAMC,eAAiB,kBAEvB,MAAMC,SAAWA,CAACC,EAAGC,MAAOC,QAAUD,MAAQ,IAAMC,MAEpD,OAAOR,IACJS,QAAQL,eAAiBC,UACzBK,MAAMP,cACNQ,QAAOC,QAAUA,KAAKC,QAAO"}