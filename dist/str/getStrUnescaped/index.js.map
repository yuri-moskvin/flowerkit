{"version":3,"file":"index.js","sources":["../../../src/str/getStrUnescaped/index.js"],"sourcesContent":["import ow from \"ow\";\r\n\r\n/**\r\n * Gets a string with replaced HTML entities on special chars\r\n * @param str{String} - source string\r\n * @return {string}\r\n * @example\r\n * // How to unescape special HTML characters?\r\n * const str = \"&lt;b&gt;Hello world &amp; underworld!&lt;/b&gt;\";\r\n * const escaped = getStrEscaped(str);\r\n * console.log(escaped); // => \"<b>Hello world & underworld!</b>\"\r\n */\r\nconst getStrUnescaped = (str) => {\r\n\r\n  ow(str, ow.string);\r\n\r\n  const symbols = {\r\n    \"&amp;\": \"&\",\r\n    \"&lt;\": \"<\",\r\n    \"&gt;\": \">\",\r\n    \"&quot;\": '\"',\r\n    \"&#39;\": \"'\"\r\n  };\r\n\r\n  const regExp = /&(?:amp|lt|gt|quot|#39);/g;\r\n\r\n  const getUnescaped = (char) => symbols[char];\r\n\r\n  return str.replace(regExp, getUnescaped);\r\n};\r\n\r\nexport {\r\n  getStrUnescaped,\r\n};\r\n"],"names":["getStrUnescaped","str","ow","string","symbols","regExp","getUnescaped","char","replace"],"mappings":";;;;;;;;;;GAYMA,MAAAA,gBAAmBC,MAEvBC,GAAGD,IAAKC,GAAGC,QAEX,MAAMC,QAAU,CACd,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,QAAS,KAGX,MAAMC,OAAS,4BAEf,MAAMC,aAAgBC,MAASH,QAAQG,MAEvC,OAAON,IAAIO,QAAQH,OAAQC,aAAa"}