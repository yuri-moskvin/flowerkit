{"version":3,"file":"index.js","sources":["../../../src/css/getCSSVar/index.js"],"sourcesContent":["import ow from \"ow\";\r\nimport { isNode } from \"../../dom/isNode/index.js\";\r\nimport { getCSSValue } from \"../getCSSValue/index.js\";\r\n\r\n/**\r\n * Gets value of CSS variable\r\n * @param el{HTMLElement|Node|Element|Document} - source DOM element\r\n * @param variable{String} - variable name\r\n * @param isNumberFormat{Boolean=} - whether to return a number rather than a string\r\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties\r\n * @return {string|number}\r\n * @example\r\n * // How to get CSS3 variable value from element?\r\n * const block = document.querySelector(\"#myBlock\"); // <div id=\"myBlock\" style=\"--myVar: value;\">\r\n * getCSSVar(block, \"--myVar\"); // or just \"myVar\"\r\n */\r\nconst getCSSVar = (el, variable, isNumberFormat = false) => {\r\n\r\n  ow(el, ow.object.validate(value => ({\r\n    validator: isNode(value),\r\n    message: `The object must be node`\r\n  })));\r\n  ow(variable, ow.string.not.empty);\r\n  ow(isNumberFormat, ow.optional.boolean);\r\n\r\n  const prefix = \"--\";\r\n  const prop = variable.startsWith(prefix) ? variable : prefix + variable;\r\n  const value = getCSSValue(el, prop);\r\n  return isNumberFormat ? parseFloat(value) : value;\r\n};\r\n\r\nexport {\r\n  getCSSVar\r\n};\r\n"],"names":["getCSSVar","el","variable","isNumberFormat","ow","object","validate","value","validator","isNode","message","string","not","empty","optional","boolean","prefix","prop","startsWith","getCSSValue","parseFloat"],"mappings":";;;;;;;;;;;;GAgBMA,MAAAA,UAAYA,CAACC,GAAIC,SAAUC,eAAiB,SAEhDC,GAAGH,GAAIG,GAAGC,OAAOC,UAASC,QAAU,CAClCC,UAAWC,OAAOF,OAClBG,QAAU,+BAEZN,GAAGF,SAAUE,GAAGO,OAAOC,IAAIC,OAC3BT,GAAGD,eAAgBC,GAAGU,SAASC,SAE/B,MAAMC,OAAS,KACf,MAAMC,KAAOf,SAASgB,WAAWF,QAAUd,SAAWc,OAASd,SAC/D,MAAMK,MAAQY,YAAYlB,GAAIgB,MAC9B,OAAOd,eAAiBiB,WAAWb,OAASA,KAAK"}