{"version":3,"file":"index.js","sources":["../../../src/net/getExternalScript/index.js"],"sourcesContent":["import ow from \"ow\";\r\nimport { getDocument } from \"ssr-window\";\r\nimport { isNode } from \"../../dom/isNode/index.js\";\r\n\r\n/**\r\n * Gets result of appending an async external script into the page\r\n * @param props{Object=} - options\r\n * @param props.isAsync{Boolean=} - `async` attribute\r\n * @param props.isDefer{Boolean=} - `defer` attribute\r\n * @param props.src{String} - script source\r\n * @param props.appendTo{Node|HTMLElement=} - element for script appending\r\n * @param props.id{String=} - ID for script\r\n * @param props.crossorigin{String=} - `crossorigin` attribute\r\n * @param props.type{String=} - `type` attribute\r\n * @return {Promise}\r\n * @example\r\n * // How to load external CDN script asynchronously?\r\n * getExternalScript({\r\n *    src: \"https://ajax.googleapis.com/ajax/libs/d3js/7.8.5/d3.min.js\",\r\n *    id: \"d3\"\r\n * })\r\n *   .then((script) => {\r\n *     console.log(\"Script is loaded\");\r\n *   });\r\n */\r\nconst getExternalScript = (props = {}) => {\r\n\r\n  ow(props, ow.object.exactShape({\r\n    isAsync: ow.optional.boolean,\r\n    isDefer: ow.optional.boolean,\r\n    src: ow.string.not.empty,\r\n    type: ow.optional.string.not.empty,\r\n    appendTo: ow.optional.object.validate(value => ({\r\n      validator: isNode(value),\r\n      message: `The object must be node`\r\n    })),\r\n    id: ow.optional.string.not.empty,\r\n    crossorigin: ow.optional.string.not.empty\r\n  }));\r\n\r\n  const {\r\n    isAsync = true,\r\n    isDefer = false,\r\n    src = \"\",\r\n    type,\r\n    appendTo = getDocument().body,\r\n    id = \"\",\r\n    crossorigin\r\n  } = props;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let isReady = false;\r\n    const script = getDocument().createElement(\"script\");\r\n    script.src = src;\r\n    script.async = isAsync;\r\n    script.defer = isDefer;\r\n    if (id) {\r\n      script.id = id;\r\n    }\r\n    if (crossorigin) {\r\n      script.crossorigin = crossorigin;\r\n    }\r\n    if (type) {\r\n      script.type = type;\r\n    }\r\n    script.onerror = (err) => {\r\n      reject(err);\r\n      script.onerror = null;\r\n    };\r\n    script.onload = script.onreadystatechange = function () {\r\n      if (!isReady && (!this.readyState || this.readyState === \"complete\")) {\r\n        isReady = true;\r\n        resolve(script);\r\n        script.onload = null;\r\n        script.onerror = null;\r\n      }\r\n    };\r\n    appendTo.appendChild(script);\r\n  });\r\n\r\n};\r\n\r\nexport {\r\n  getExternalScript\r\n};\r\n"],"names":["getExternalScript","props","ow","object","exactShape","isAsync","optional","boolean","isDefer","src","string","not","empty","type","appendTo","validate","value","validator","isNode","message","id","crossorigin","getDocument","body","Promise","resolve","reject","isReady","script","createElement","async","defer","onerror","err","onload","onreadystatechange","this","readyState","appendChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;GAyBA,MAAMA,kBAAoBA,CAACC,MAAQ,MAEjCC,GAAGD,MAAOC,GAAGC,OAAOC,WAAW,CAC7BC,QAASH,GAAGI,SAASC,QACrBC,QAASN,GAAGI,SAASC,QACrBE,IAAKP,GAAGQ,OAAOC,IAAIC,MACnBC,KAAMX,GAAGI,SAASI,OAAOC,IAAIC,MAC7BE,SAAUZ,GAAGI,SAASH,OAAOY,UAASC,QAAU,CAC9CC,UAAWC,OAAOF,OAClBG,QAAU,8BAEZC,GAAIlB,GAAGI,SAASI,OAAOC,IAAIC,MAC3BS,YAAanB,GAAGI,SAASI,OAAOC,IAAIC,SAGtC,MAAMP,QACJA,QAAU,KAAIG,QACdA,QAAU,MAAKC,IACfA,IAAM,GAAEI,KACRA,KAAIC,SACJA,SAAWQ,cAAcC,KAAIH,GAC7BA,GAAK,GAAEC,YACPA,aACEpB,MAEJ,OAAO,IAAIuB,SAAQ,CAACC,QAASC,UAC3B,IAAIC,QAAU,MACd,MAAMC,OAASN,cAAcO,cAAc,UAC3CD,OAAOnB,IAAMA,IACbmB,OAAOE,MAAQzB,QACfuB,OAAOG,MAAQvB,QACf,GAAIY,GACFQ,OAAOR,GAAKA,GAEd,GAAIC,YACFO,OAAOP,YAAcA,YAEvB,GAAIR,KACFe,OAAOf,KAAOA,KAEhBe,OAAOI,QAAWC,MAChBP,OAAOO,KACPL,OAAOI,QAAU,IAAI,EAEvBJ,OAAOM,OAASN,OAAOO,mBAAqB,WAC1C,IAAKR,WAAaS,KAAKC,YAAcD,KAAKC,aAAe,YAAa,CACpEV,QAAU,KACVF,QAAQG,QACRA,OAAOM,OAAS,KAChBN,OAAOI,QAAU,IACnB,GAEFlB,SAASwB,YAAYV,OAAO,GAC5B"}