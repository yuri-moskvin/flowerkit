{"version":3,"file":"index.js","sources":["../../../src/net/getUrlWithQueryParams/index.js"],"sourcesContent":["import ow from \"ow\";\r\nimport { getWindow, getDocument } from \"ssr-window\";\r\nimport { getObjFromFormData } from \"../../obj/getObjFromFormData/index.js\";\r\n\r\n/**\r\n * Gets a URL string with updated query params from object or FormData instance\r\n * @param uri{String} - source URL\r\n * @param params{Object|FormData} - query params as object or FormData\r\n * @return {String}\r\n * @example\r\n * // How to set query params to URL string?\r\n * const url = \"https://example.com\";\r\n * getUrlWithQueryParams(url, { foo: 1 }); // \"https://example.com/?foo=1\"\r\n *\r\n * // How to update query params in URL string?\r\n * const url = \"/api/users/?page=1\";\r\n * getUrlWithQueryParams(url, { page: 2, limit: 100 }); // \"/api/users/?page=2&limit=100\"\r\n */\r\nconst getUrlWithQueryParams = (uri = getWindow().location.href, params = {}) => {\r\n\r\n  ow(uri, ow.optional.string);\r\n  ow(params, ow.optional.object.validate(value => ({\r\n    validator: !!value && (value instanceof FormData || typeof value === \"object\"),\r\n    message: () => `Params must be object or FormData`\r\n  })));\r\n\r\n  let url = uri;\r\n  const a = getDocument().createElement(\"a\");\r\n  a.href = uri;\r\n\r\n  if (params instanceof FormData) {\r\n    params = getObjFromFormData(params);\r\n  }\r\n\r\n  Object.entries(params).forEach(([ key, value ]) => {\r\n    let reg_ex = new RegExp(key + \"((?:\\\\[[^\\\\]]*\\\\])?)(=|$)(.*)\"), qs, qs_len, key_found = false;\r\n    if (!a.search) {\r\n      a.search = \"?\" + key + \"=\" + value;\r\n      url = a.href;\r\n      return;\r\n    }\r\n    qs = a.search.replace(/^\\?/, \"\").split(/&(?:amp;)?/);\r\n    qs_len = qs.length;\r\n    while (qs_len > 0) {\r\n      qs_len--;\r\n      if (!qs[qs_len]) {\r\n        qs.splice(qs_len, 1);\r\n        continue;\r\n      }\r\n      if (reg_ex.test(qs[qs_len])) {\r\n        qs[qs_len] = qs[qs_len].replace(reg_ex, key + \"$1\") + \"=\" + value;\r\n        key_found = true;\r\n      }\r\n    }\r\n    if (!key_found) {\r\n      qs.push(key + \"=\" + value);\r\n    }\r\n    a.search = \"?\" + qs.join(\"&\");\r\n    url = a.href;\r\n  });\r\n  return url;\r\n};\r\n\r\nexport {\r\n  getUrlWithQueryParams\r\n};\r\n"],"names":["getUrlWithQueryParams","uri","getWindow","location","href","params","ow","optional","string","object","validate","value","validator","FormData","message","url","a","getDocument","createElement","getObjFromFormData","Object","entries","forEach","key","reg_ex","RegExp","qs","qs_len","key_found","search","replace","split","length","splice","test","push","join"],"mappings":";;;;;;;;;;;;;;GAkBA,MAAMA,sBAAwBA,CAACC,IAAMC,YAAYC,SAASC,KAAMC,OAAS,MAEvEC,GAAGL,IAAKK,GAAGC,SAASC,QACpBF,GAAGD,OAAQC,GAAGC,SAASE,OAAOC,UAASC,QAAU,CAC/CC,YAAaD,QAAUA,iBAAiBE,iBAAmBF,QAAU,UACrEG,QAASA,IAAO,yCAGlB,IAAIC,IAAMd,IACV,MAAMe,EAAIC,cAAcC,cAAc,KACtCF,EAAEZ,KAAOH,IAET,GAAII,kBAAkBQ,SACpBR,OAASc,mBAAmBd,QAG9Be,OAAOC,QAAQhB,QAAQiB,SAAQ,EAAGC,IAAKZ,UACrC,IAAIa,OAAS,IAAIC,OAAOF,IAAM,iCAAkCG,GAAIC,OAAQC,UAAY,MACxF,IAAKZ,EAAEa,OAAQ,CACbb,EAAEa,OAAS,IAAMN,IAAM,IAAMZ,MAC7BI,IAAMC,EAAEZ,KACR,MACF,CACAsB,GAAKV,EAAEa,OAAOC,QAAQ,MAAO,IAAIC,MAAM,cACvCJ,OAASD,GAAGM,OACZ,MAAOL,OAAS,EAAG,CACjBA,SACA,IAAKD,GAAGC,QAAS,CACfD,GAAGO,OAAON,OAAQ,GAClB,QACF,CACA,GAAIH,OAAOU,KAAKR,GAAGC,SAAU,CAC3BD,GAAGC,QAAUD,GAAGC,QAAQG,QAAQN,OAAQD,IAAM,MAAQ,IAAMZ,MAC5DiB,UAAY,IACd,CACF,CACA,IAAKA,UACHF,GAAGS,KAAKZ,IAAM,IAAMZ,OAEtBK,EAAEa,OAAS,IAAMH,GAAGU,KAAK,KACzBrB,IAAMC,EAAEZ,IAAI,IAEd,OAAOW,GAAG"}