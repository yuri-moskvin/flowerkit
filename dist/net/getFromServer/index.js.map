{"version":3,"file":"index.js","sources":["../../../src/net/getFromServer/index.js"],"sourcesContent":["import ow from \"ow\";\r\nimport { getDocument, getWindow } from \"ssr-window\";\r\nimport { bubble } from \"../../evt/bubble/index.js\";\r\nimport { getObjFromFormData } from \"../../obj/getObjFromFormData/index.js\";\r\nimport { getFormDataFromObj } from \"../getFormDataFromObj/index.js\";\r\nimport { getUrlWithQueryParams } from \"../getUrlWithQueryParams/index.js\";\r\n\r\n/**\r\n * Gets result of async fetch query to the server. Lightweight alternative for `axios` lib\r\n * @param props{Object=} - params\r\n * @param props.contentType{String=} - type of request content (\"auto\" (by default), \"application/json\", \"application/x-www-form-urlencoded\", or \"multipart/form-data\")\r\n * @param props.isBubble{Boolean=} - bubble a custom event with name \"getFromServer\" after success request and response in details event field\r\n * @param props.timeout{Number=} - query timeout\r\n * @param props.method{String=} - request method (`GET` (by default), `PUT`, `POST` or `DELETE`)\r\n * @param props.mode{RequestMode=} - request mode\r\n * @param props.signal{AbortSignal=} - instance of AbortSignal for request\r\n * @param props.data{Object|FormData=} - object of FormData instance for request\r\n * @param props.getSuccessResp{Function=} - callback for success response\r\n * @param props.getResp{Function=} - async callback for response (overrides default behavior)\r\n * @param props.type{String=} - type of response (`text`, `json` (by default) or `blob`)\r\n * @param props.url{String=} - request url\r\n * @param props.headers{Object=} - object of request headers\r\n * @param props.allowedCodes{Array=} - array of response allowed codes\r\n * @param props.credentials{RequestCredentials=} - credentials value for request (`same-origin` by default)\r\n * @param props.redirect{RequestRedirect=} - redirect value for request (`follow` by default)\r\n * @param props.cache{RequestCache=} - cache value for request (`default` by default)\r\n * @param props.referrerPolicy{ReferrerPolicy=} - referrerPolicy value for request (`no-referrer-when-downgrade` by default)\r\n * @param props.fetchProps{Object=} - other `fetch` API options that overrides default behavior of `getFromServer` function\r\n * @return {Promise}\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n * @example\r\n * // How to POST data to the server?\r\n * getFromServer({ url: \"/api/send\", method: \"POST\", data: { idUser: \"123\" } })\r\n *   .then(resp => console.log(resp)) // POST \"api/send\" with JSON body\r\n *\r\n * // How to GET data from the server?\r\n * getFromServer({ url: \"/api/send\", method: \"GET\", data: { idUser: \"123\" } })\r\n *   .then(resp => console.log(resp)) // GET \"/api/send/?idUser=123\" with query params from \"data\" in url\r\n *\r\n * // How to POST data to the server with FormData?\r\n * const myData = new FormData();\r\n * getFromServer({ url: \"/api/send\", method: \"POST\", data: myData })\r\n *   .then(resp => console.log(resp)) // POST \"/api/send\" with FormData body\r\n *\r\n * // How to GET some user id data from the server?\r\n * const userId = await getFromServer({ url: \"/api/send\", method: \"GET\", getSuccessResp: (resp) => resp.userId }) // GET \"api/send\" and parse userId field from response\r\n *\r\n * // How to GET some user id data from the server with promise?\r\n * getFromServer({ url: \"/api/send\", method: \"GET\" })\r\n *   .then(resp => console.log(resp.userId)) // GET \"api/send\" and return promise with response\r\n *\r\n * // By default `headers` contains key `\"X-Requested-With\" with \"XMLHttpRequest\" value` for legacy AJAX support\r\n */\r\nconst getFromServer = async (props = {}) => {\r\n\r\n  ow(props, ow.object.exactShape({\r\n    contentType: ow.optional.string.not.empty,\r\n    timeout: ow.optional.number,\r\n    method: ow.optional.string.not.empty,\r\n    mode: ow.optional.string.not.empty,\r\n    getSuccessResp: ow.optional.function,\r\n    getResp: ow.optional.function,\r\n    isBubble: ow.optional.boolean,\r\n    type: ow.optional.string.not.empty,\r\n    url: ow.optional.string.not.empty,\r\n    headers: ow.optional.object,\r\n    allowedCodes: ow.optional.array.validate(value => ({\r\n      validator: value.length ? value.every(item => typeof item === \"number\") : true,\r\n      message: () => label => `AllowedCodes must be non-empty array of numbers`\r\n    })),\r\n    credentials: ow.optional.string,\r\n    redirect: ow.optional.string,\r\n    referrerPolicy: ow.optional.string,\r\n    cache: ow.optional.string,\r\n    fetchProps: ow.optional.object,\r\n    signal: ow.optional.object.validate(value => ({\r\n      validator: value instanceof AbortSignal,\r\n      message: () => label => `\"signal\" prop must be instance of AbortSignal`\r\n    })),\r\n    data: ow.optional.any([ ow.null, ow.object.validate(value => ({\r\n      validator: value === null || value instanceof FormData || typeof value === \"object\",\r\n      message: () => label => `\"data\" prop must be instance of FormData, plain Object or null`\r\n    })), ])\r\n  }));\r\n\r\n  const {\r\n    contentType = \"auto\",\r\n    isBubble = true,\r\n    timeout = 12000,\r\n    method = \"GET\",\r\n    mode = \"cors\",\r\n    signal = null,\r\n    data = null,\r\n    getSuccessResp = (resp) => resp,\r\n    getResp,\r\n    type = \"json\",\r\n    url = getWindow().location.href || \"./\",\r\n    headers = {\r\n      \"X-Requested-With\": \"XMLHttpRequest\"\r\n    },\r\n    allowedCodes = [],\r\n    credentials = \"same-origin\",\r\n    redirect = \"follow\",\r\n    referrerPolicy = \"no-referrer-when-downgrade\",\r\n    cache = \"default\",\r\n    fetchProps = {}\r\n  } = props;\r\n\r\n  let timer = null;\r\n  const queries = [];\r\n\r\n  /**\r\n   * Gets prepared request body\r\n   * @private\r\n   * @return {null|FormData|string}\r\n   */\r\n  const getBody = () => {\r\n    const isFd = !!data && data instanceof FormData;\r\n    const isPost = typeof method === \"string\" && method.toUpperCase() === \"POST\";\r\n    switch (true) {\r\n      case contentType === \"application/json\" && isPost:\r\n        return JSON.stringify(isFd ? getObjFromFormData(data) : (data || {}));\r\n      case [ \"application/x-www-form-urlencoded\", \"multipart/form-data\", \"auto\" ].includes(contentType) && isPost:\r\n        return isFd ? data : getFormDataFromObj(data || {});\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets reject\r\n   * @param reason\r\n   * @private\r\n   * @return {Promise<never>}\r\n   */\r\n  const getReject = (reason) => Promise.reject(reason);\r\n\r\n  /**\r\n   * Setup timer\r\n   * @param callback\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  const setTimer = (callback) => {\r\n    timer = setTimeout(() => callback(408), timeout);\r\n    return timer;\r\n  };\r\n\r\n  /**\r\n   * Gets url\r\n   * @private\r\n   * @return {string}\r\n   */\r\n  const getUrl = () => {\r\n    return ([ \"GET\", \"HEAD\", \"CONNECT\", \"OPTIONS\", \"TRACE\" ].includes(method) && data !== null) ? getUrlWithQueryParams(url, data) : url;\r\n  };\r\n\r\n  /**\r\n   * Gets response\r\n   * @param resp{Response}\r\n   * @private\r\n   * @return {Promise}\r\n   */\r\n  const getResponse = async (resp) => {\r\n    clearTimeout(timer);\r\n    if (typeof getResp === \"function\") {\r\n      return await getResp(resp);\r\n    } else {\r\n      const { ok, status } = resp;\r\n      if (ok || allowedCodes.length && allowedCodes.includes(status)) {\r\n        switch (type) {\r\n          case \"json\":\r\n            return await resp.json();\r\n          case \"blob\":\r\n            return await resp.blob();\r\n          default:\r\n            return await resp.text();\r\n        }\r\n      } else {\r\n        return await getReject(status);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get headers\r\n   * @private\r\n   * @return {Headers}\r\n   */\r\n  const getHeaders = () => {\r\n    const result = headers;\r\n    if (contentType !== \"auto\") {\r\n      result[\"Content-Type\"] = contentType;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * Fetch options\r\n   * @type {RequestInit}\r\n   * @private\r\n   */\r\n  const fetchParams = {\r\n    method,\r\n    body: getBody(),\r\n    mode,\r\n    signal,\r\n    credentials,\r\n    redirect,\r\n    cache,\r\n    referrerPolicy,\r\n    headers: getHeaders(),\r\n    ...fetchProps\r\n  };\r\n\r\n  queries.push(fetch(getUrl(), fetchParams));\r\n\r\n  if (timeout && timeout !== Infinity) {\r\n    queries.push(new Promise((resolve, reject) => setTimer(reject)));\r\n  }\r\n\r\n  // Return race\r\n  return await Promise.race(queries)\r\n    .then(resp => getResponse(resp)\r\n      .then(resp => {\r\n        if (isBubble && typeof window !== \"undefined\") {\r\n          bubble(getDocument(), getFromServer.name, resp);\r\n        }\r\n        return getSuccessResp(resp);\r\n      }), reject => getReject(reject));\r\n};\r\n\r\nexport {\r\n  getFromServer\r\n};\r\n"],"names":["getFromServer","async","props","ow","object","exactShape","contentType","optional","string","not","empty","timeout","number","method","mode","getSuccessResp","function","getResp","isBubble","boolean","type","url","headers","allowedCodes","array","validate","value","validator","length","every","item","message","label","credentials","redirect","referrerPolicy","cache","fetchProps","signal","AbortSignal","data","any","null","FormData","resp","getWindow","location","href","timer","queries","getBody","isFd","isPost","toUpperCase","JSON","stringify","getObjFromFormData","includes","getFormDataFromObj","getReject","reason","Promise","reject","setTimer","callback","setTimeout","getUrl","getUrlWithQueryParams","getResponse","clearTimeout","ok","status","json","blob","text","getHeaders","result","fetchParams","body","push","fetch","Infinity","resolve","race","then","window","bubble","getDocument","name"],"mappings":"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"}