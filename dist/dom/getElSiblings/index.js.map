{"version":3,"file":"index.js","sources":["../../../src/dom/getElSiblings/index.js"],"sourcesContent":["import ow from \"ow\";\r\nimport { isNode } from \"../isNode/index.js\";\r\n\r\n/**\r\n * Gets array of all siblings of given node\r\n * @param el{Node|Element|HTMLElement} - node\r\n * @return {Array}\r\n * @example\r\n * // How to get all siblings of `li` DOM-element with specific ID?\r\n * // <ul>\r\n * //   <li id=\"item1\">One</li>\r\n * //   <li id=\"item2\">Two</li>\r\n * //   <li id=\"item3\">Three</li>\r\n * // <ul>\r\n * const secondItem = document.getElementById(\"item2\");\r\n * getElSiblings(secondItem).filter(item => item !== secondItem) // [ li#item1, li#utem3 ]\r\n */\r\nconst getElSiblings = (el) => {\r\n\r\n  ow(el, ow.object.validate(value => ({\r\n    validator: isNode(value),\r\n    message: `The object must be node`\r\n  })));\r\n\r\n  const siblings = [];\r\n  let sibling = el?.parentNode?.firstChild;\r\n  while (sibling) {\r\n    if (sibling.nodeType === 1 && sibling !== el){\r\n      siblings.push(sibling);\r\n    }\r\n    sibling = sibling.nextSibling;\r\n  }\r\n  return siblings;\r\n};\r\n\r\nexport {\r\n  getElSiblings\r\n};\r\n"],"names":["getElSiblings","el","ow","object","validate","value","validator","isNode","message","siblings","sibling","parentNode","firstChild","nodeType","push","nextSibling"],"mappings":";;;;;;;;;;;;;;GAiBMA,MAAAA,cAAiBC,KAErBC,GAAGD,GAAIC,GAAGC,OAAOC,UAASC,QAAU,CAClCC,UAAWC,OAAOF,OAClBG,QAAU,+BAGZ,MAAMC,SAAW,GACjB,IAAIC,QAAUT,IAAIU,YAAYC,WAC9B,MAAOF,QAAS,CACd,GAAIA,QAAQG,WAAa,GAAKH,UAAYT,GACxCQ,SAASK,KAAKJ,SAEhBA,QAAUA,QAAQK,WACpB,CACA,OAAON,QAAQ"}