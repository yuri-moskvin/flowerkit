{"version":3,"file":"index.js","sources":["../../../src/obj/getObjWithFallbacks/index.js"],"sourcesContent":["import ow from \"ow\";\r\n\r\nconst allowedFallbacks = ow.optional.any([ ow.string, ow.number, ow.boolean, ow.object, ow.function, ow.array ]);\r\n\r\nconst isRulesValid = ow.object.exactShape({\r\n  type: ow.optional.string.not.empty,\r\n  output: ow.optional.string.not.empty,\r\n  getValue: ow.optional.function,\r\n  fallback: allowedFallbacks\r\n});\r\n\r\n/**\r\n * Gets an object with fixed keys and values\r\n * @param data{Object} - source data\r\n * @param rules{Object=} - rules for fix (see example)\r\n * @param fallbacks{Object=} - fallback for each type of values\r\n * @return {Object}\r\n * @example\r\n * // How to replace object props and values with own fallback data?\r\n * const uglyObjectFromAPI = {\r\n *   userId: 123,\r\n *   has_access: 0,\r\n *   something: \"\",\r\n *   price: \"500.05\",\r\n *   wrongPrice: \"500,05\",\r\n *   custom: []\r\n * };\r\n *\r\n * const niceRules =  {\r\n *   userId: {\r\n *     output: \"idUser\",\r\n *     type: \"string\"\r\n *   },\r\n *   has_access: {\r\n *     output: \"isAccess\",\r\n *     type: \"boolean\"\r\n *   },\r\n *   something: {\r\n *     output: \"something\",\r\n *     fallback: \"—\"\r\n *   },\r\n *   price: {\r\n *     output: \"price\",\r\n *     type: \"number\"\r\n *   },\r\n *   wrongPrice: {\r\n *     output: \"wrongPrice\",\r\n *     type: \"number\"\r\n *   },\r\n *   custom: {\r\n *     output: \"custom\",\r\n *     getValue: (value, fallback) => Array.isArray(value) ? \"custom value\" : value\r\n *   }\r\n * }\r\n *\r\n * const result = getObjWithFallbacks(uglyObjectFromAPI, niceRules);\r\n * console.log(result); // =>\r\n * // {\r\n * //  idUser: \"123\",\r\n * //  isAccess: false,\r\n * //  something: \"—\",\r\n * //  price: 500.05,\r\n * //  wrongPrice: 0,\r\n * //  custom: \"custom value\"\r\n * // }\r\n */\r\nconst getObjWithFallbacks = (data, rules = {}, fallbacks = {}) => {\r\n\r\n  ow(data, ow.object);\r\n\r\n  ow(rules, ow.object.validate((value) => ({\r\n    message: () => `prop \"rules\" does not match schema \"{ type?, output?, getValue?, fallback? }\"`,\r\n    validator: Object.values(value).every(item => ow.isValid(item, isRulesValid))\r\n  })));\r\n\r\n  ow(fallbacks, ow.optional.object.exactShape({\r\n    string: allowedFallbacks,\r\n    number: allowedFallbacks,\r\n    boolean: allowedFallbacks,\r\n    object: allowedFallbacks,\r\n    array: allowedFallbacks\r\n  }));\r\n\r\n  const placeholders = {\r\n    \"string\": \"\",\r\n    \"number\": 0,\r\n    \"boolean\": false,\r\n    \"object\": {},\r\n    \"array\": [],\r\n    ...fallbacks\r\n  };\r\n\r\n  const newItem = {};\r\n\r\n  Object.entries(data).forEach(([ key, value ]) => {\r\n\r\n    const rule = rules[key];\r\n\r\n    if (rule) {\r\n      const {\r\n        getValue,\r\n        fallback,\r\n        output = key?.toString() ?? \"\",\r\n        type = typeof value\r\n      } = rule;\r\n\r\n      const getFallback = (type) => {\r\n        return typeof fallback === \"undefined\" ? placeholders[type] : fallback;\r\n      };\r\n\r\n      const getActualValue = ({ type, value, isValid }) => {\r\n        if (typeof value === type) {\r\n          return isValid(value) ? value : getFallback(type);\r\n        } else {\r\n          return getFallback(type);\r\n        }\r\n      };\r\n\r\n      if (output) {\r\n        if (typeof getValue === \"function\") {\r\n          newItem[output] = getValue(value, getFallback(Array.isArray(value) ? \"array\" : typeof value));\r\n        } else {\r\n          switch (type) {\r\n            case \"string\":\r\n              newItem[output] = getActualValue({\r\n                type,\r\n                value: value?.toString() ?? getFallback(type),\r\n                isValid: (value) => !!value.trim().length\r\n              });\r\n              break;\r\n            case \"number\":\r\n              newItem[output] = getActualValue({\r\n                type,\r\n                value: (Number.isNaN(Number(value)) || typeof value !== \"number\" && Number(value) === 0) ? getFallback(type) : Number(value),\r\n                isValid: (value) => value !== Infinity\r\n              });\r\n              break;\r\n            case \"boolean\":\r\n              newItem[output] = getActualValue({\r\n                type,\r\n                value: !!value || getFallback(type),\r\n                isValid: (value) => !!value\r\n              });\r\n              break;\r\n            case \"array\":\r\n              newItem[output] = getActualValue({\r\n                type: \"array\",\r\n                value,\r\n                isValid: (value) => Array.isArray(value)\r\n              });\r\n              break;\r\n            case \"object\":\r\n              newItem[output] = getActualValue({\r\n                type: Array.isArray(value) ? \"array\" : \"object\",\r\n                value,\r\n                isValid: (value) => value !== null\r\n              });\r\n              break;\r\n            default:\r\n              newItem[output] = value;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      newItem[key] = value;\r\n    }\r\n  });\r\n\r\n  return newItem;\r\n};\r\n\r\nexport {\r\n  getObjWithFallbacks\r\n};\r\n"],"names":["allowedFallbacks","ow","optional","any","string","number","boolean","object","function","array","isRulesValid","exactShape","type","not","empty","output","getValue","fallback","getObjWithFallbacks","data","rules","fallbacks","validate","value","message","validator","Object","values","every","item","isValid","placeholders","newItem","entries","forEach","key","rule","toString","getFallback","getActualValue","Array","isArray","trim","length","Number","isNaN","Infinity"],"mappings":"mBAEA,MAAMA,iBAAmBC,GAAGC,SAASC,IAAI,CAAEF,GAAGG,OAAQH,GAAGI,OAAQJ,GAAGK,QAASL,GAAGM,OAAQN,GAAGO,SAAUP,GAAGQ,QAExG,MAAMC,aAAeT,GAAGM,OAAOI,WAAW,CACxCC,KAAMX,GAAGC,SAASE,OAAOS,IAAIC,MAC7BC,OAAQd,GAAGC,SAASE,OAAOS,IAAIC,MAC/BE,SAAUf,GAAGC,SAASM,SACtBS,SAAUjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0DZ,MAAMkB,oBAAsBA,CAACC,KAAMC,MAAQ,CAAA,EAAIC,UAAY,CAAA,KAEzDpB,GAAGkB,KAAMlB,GAAGM,QAEZN,GAAGmB,MAAOnB,GAAGM,OAAOe,UAAUC,QAAW,CACvCC,QAASA,IAAO,gFAChBC,UAAWC,OAAOC,OAAOJ,OAAOK,OAAMC,MAAQ5B,GAAG6B,QAAQD,KAAMnB,qBAGjET,GAAGoB,UAAWpB,GAAGC,SAASK,OAAOI,WAAW,CAC1CP,OAAQJ,iBACRK,OAAQL,iBACRM,QAASN,iBACTO,OAAQP,iBACRS,MAAOT,oBAGT,MAAM+B,aAAe,CACnB3B,OAAU,GACVC,OAAU,EACVC,QAAW,MACXC,OAAU,CAAE,EACZE,MAAS,MACNY,WAGL,MAAMW,QAAU,CAAA,EAEhBN,OAAOO,QAAQd,MAAMe,SAAQ,EAAGC,IAAKZ,UAEnC,MAAMa,KAAOhB,MAAMe,KAEnB,GAAIC,KAAM,CACR,MAAMpB,SACJA,SAAQC,SACRA,SAAQF,OACRA,OAASoB,KAAKE,YAAc,GAAEzB,KAC9BA,YAAcW,OACZa,KAEJ,MAAME,YAAe1B,aACLK,WAAa,YAAcc,aAAanB,MAAQK,SAGhE,MAAMsB,eAAiBA,EAAG3B,UAAMW,YAAOO,oBACrC,UAAWP,QAAUX,KACnB,OAAOkB,QAAQP,OAASA,MAAQe,YAAY1B,WAE5C,OAAO0B,YAAY1B,KACrB,EAGF,GAAIG,OACF,UAAWC,WAAa,WACtBgB,QAAQjB,QAAUC,SAASO,MAAOe,YAAYE,MAAMC,QAAQlB,OAAS,eAAiBA,aAEtF,OAAQX,MACN,IAAK,SACHoB,QAAQjB,QAAUwB,eAAe,CAC/B3B,UACAW,MAAOA,OAAOc,YAAcC,YAAY1B,MACxCkB,QAAUP,SAAYA,MAAMmB,OAAOC,SAErC,MACF,IAAK,SACHX,QAAQjB,QAAUwB,eAAe,CAC/B3B,UACAW,MAAQqB,OAAOC,MAAMD,OAAOrB,gBAAkBA,QAAU,UAAYqB,OAAOrB,SAAW,EAAKe,YAAY1B,MAAQgC,OAAOrB,OACtHO,QAAUP,OAAUA,QAAUuB,WAEhC,MACF,IAAK,UACHd,QAAQjB,QAAUwB,eAAe,CAC/B3B,UACAW,QAASA,OAASe,YAAY1B,MAC9BkB,QAAUP,SAAYA,QAExB,MACF,IAAK,QACHS,QAAQjB,QAAUwB,eAAe,CAC/B3B,KAAM,QACNW,YACAO,QAAUP,OAAUiB,MAAMC,QAAQlB,SAEpC,MACF,IAAK,SACHS,QAAQjB,QAAUwB,eAAe,CAC/B3B,KAAM4B,MAAMC,QAAQlB,OAAS,QAAU,SACvCA,YACAO,QAAUP,OAAUA,QAAU,OAEhC,MACF,QACES,QAAQjB,QAAUQ,MAI5B,MACES,QAAQG,KAAOZ,KACjB,IAGF,OAAOS,OAAO"}