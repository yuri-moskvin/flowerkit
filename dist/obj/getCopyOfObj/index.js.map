{"version":3,"file":"index.js","sources":["../../../src/obj/getCopyOfObj/index.js"],"sourcesContent":["/**\r\n * Gets a deep copy/clone of an object/array without a reference to the original object\r\n * @param obj{Object|Array} - source object (array)\r\n * @return {Object|Array}\r\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Deep_copy\r\n * @example\r\n * // How to make a deep clone of object?\r\n * const originalObject = {\r\n *   value: 1,\r\n * }\r\n * const copy = getCopyOfObj(originalObject);\r\n *\r\n * copy.value = 2;\r\n * console.log(originalObject.value === copy.value) // false\r\n */\r\nconst getCopyOfObj = (obj) => {\r\n\r\n  if (obj === null || typeof obj !== \"object\" || obj instanceof Date) {\r\n    return obj;\r\n  }\r\n\r\n  const objCopy = Array.isArray(obj) ? [] : {};\r\n\r\n  return Object.keys(obj).reduce((nestedObj, key) => {\r\n    nestedObj[key] = getCopyOfObj(obj[key]);\r\n    return nestedObj;\r\n  }, objCopy);\r\n\r\n};\r\n\r\nexport {\r\n  getCopyOfObj\r\n};\r\n"],"names":["getCopyOfObj","obj","Date","objCopy","Array","isArray","Object","keys","reduce","nestedObj","key"],"mappings":";;;;;;;;;;;;;;;AAeMA,MAAAA,aAAgBC,MAEpB,GAAIA,MAAQ,aAAeA,MAAQ,UAAYA,eAAeC,KAC5D,OAAOD,IAGT,MAAME,QAAUC,MAAMC,QAAQJ,KAAO,GAAK,GAE1C,OAAOK,OAAOC,KAAKN,KAAKO,QAAO,CAACC,UAAWC,OACzCD,UAAUC,KAAOV,aAAaC,IAAIS,MAClC,OAAOD,SAAS,GACfN,QAAQ"}