{"version":3,"file":"index.js","sources":["../../../src/obj/getMapFromObj/index.js"],"sourcesContent":["import ow from \"ow\";\r\n\r\n/**\r\n * Gets a Map from object\r\n * @param obj{Object=} - source object\r\n * @param getFiltered{Function=} - filter function for each pair of key and value\r\n * @return {Map}\r\n * @example\r\n * // How to convert an object to ES6 Map and pass only number values?\r\n * const sourceObj = {\r\n *   hello: \"world\",\r\n *   goodbye: 1\r\n * };\r\n * const targetMap = getMapFromObj(sourceObj, (key, value, index) => typeof value === \"number\");\r\n * console.log(targetMap); // => Map<\"goodbye\", 1>\r\n */\r\nconst getMapFromObj = (obj = {}, getFiltered = (key, value, index) => true) => {\r\n\r\n  ow(obj, ow.object);\r\n  ow(getFiltered, ow.optional.function);\r\n\r\n  const map = new Map();\r\n  Object.entries(obj).forEach(([ key, value ], index) => {\r\n    if (getFiltered(key, value, index)) {\r\n      map.set(key, value);\r\n    }\r\n  });\r\n\r\n  return map;\r\n};\r\n\r\nexport {\r\n  getMapFromObj\r\n};\r\n"],"names":["getMapFromObj","obj","getFiltered","key","value","index","ow","object","optional","function","map","Map","Object","entries","forEach","set"],"mappings":";;;;;;;;;;;;;;GAgBA,MAAMA,cAAgBA,CAACC,IAAM,GAAIC,YAAcA,CAACC,IAAKC,MAAOC,QAAU,QAEpEC,GAAGL,IAAKK,GAAGC,QACXD,GAAGJ,YAAaI,GAAGE,SAASC,UAE5B,MAAMC,IAAM,IAAIC,IAChBC,OAAOC,QAAQZ,KAAKa,SAAQ,EAAGX,IAAKC,OAASC,SAC3C,GAAIH,YAAYC,IAAKC,MAAOC,OAC1BK,IAAIK,IAAIZ,IAAKC,MACf,IAGF,OAAOM,GAAG"}