{"version":3,"file":"index.js","sources":["../../../src/fn/isFnClass/index.js"],"sourcesContent":["/**\r\n * Checks if a function is class or instance of class\r\n * @param fn{*} - source function\r\n * @return {boolean}\r\n * @example\r\n * // How to check if a function is ES6 Class?\r\n * const fn = new Class();\r\n * const isClass = isFnClass(fn);\r\n * console.log(isClass); // => true\r\n */\r\nconst isFnClass = (fn) => {\r\n  if (!!fn && typeof fn === \"function\" || typeof fn === \"object\") {\r\n    const isCtorClass = !!fn?.constructor && fn.constructor.toString().substring(0, 5) === \"class\";\r\n    if (fn?.prototype === undefined) {\r\n      return isCtorClass;\r\n    }\r\n    const isPrototypeCtorClass = !!fn?.prototype?.constructor && fn.prototype.constructor.toString && fn.prototype.constructor.toString().substring(0, 5) === \"class\";\r\n    return isCtorClass || isPrototypeCtorClass;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport {\r\n  isFnClass\r\n};\r\n"],"names":["isFnClass","fn","isCtorClass","constructor","toString","substring","prototype","undefined","isPrototypeCtorClass"],"mappings":";;;;;;;;;;AAUMA,MAAAA,UAAaC,KACjB,KAAMA,WAAaA,KAAO,mBAAqBA,KAAO,SAAU,CAC9D,MAAMC,cAAgBD,IAAIE,aAAeF,GAAGE,YAAYC,WAAWC,UAAU,EAAG,KAAO,QACvF,GAAIJ,IAAIK,iBAAcC,EACpB,OAAOL,YAET,MAAMM,uBAAyBP,IAAIK,WAAWH,aAAeF,GAAGK,UAAUH,YAAYC,UAAYH,GAAGK,UAAUH,YAAYC,WAAWC,UAAU,EAAG,KAAO,QAC1J,OAAOH,aAAeM,oBACxB,MACE,OAAO,KACT"}