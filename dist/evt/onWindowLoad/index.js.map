{"version":3,"file":"index.js","sources":["../../../src/evt/onWindowLoad/index.js"],"sourcesContent":["import ow from \"ow\";\r\nimport { getDocument, getWindow } from \"ssr-window\";\r\n\r\n/**\r\n * Runs callback when page has fully loaded\r\n * @param cb{Function} - callback function\r\n * @param isAutoInit{Boolean=} - attaches event immediately\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\r\n * @return {{ handler: Function, addListener: Function, removeListener: Function }}\r\n * @example\r\n * // How to detect when whole page (window) has loaded?\r\n * const callback = () => console.log(\"Page loaded\");\r\n * onWindowLoad(callback);\r\n * */\r\nconst onWindowLoad = (cb, isAutoInit = true) => {\r\n\r\n  ow(cb, ow.function);\r\n  ow(isAutoInit, ow.optional.boolean);\r\n\r\n  const handler = () => {\r\n    cb();\r\n  };\r\n\r\n  const addListener = () => {\r\n    if (getDocument().readyState === \"complete\") {\r\n      handler();\r\n    } else {\r\n      getWindow().addEventListener(\"load\", handler);\r\n    }\r\n  };\r\n\r\n  const removeListener = () => {\r\n    getWindow().removeEventListener(\"load\", handler);\r\n  };\r\n\r\n  if (isAutoInit) {\r\n    addListener();\r\n  }\r\n\r\n  return {\r\n    handler,\r\n    addListener,\r\n    removeListener\r\n  };\r\n\r\n};\r\n\r\nexport {\r\n  onWindowLoad\r\n};\r\n"],"names":["onWindowLoad","cb","isAutoInit","ow","function","optional","boolean","handler","addListener","getDocument","readyState","getWindow","addEventListener","removeListener","removeEventListener"],"mappings":";;;;;;;;;;;KAcMA,MAAAA,aAAeA,CAACC,GAAIC,WAAa,QAErCC,GAAGF,GAAIE,GAAGC,UACVD,GAAGD,WAAYC,GAAGE,SAASC,SAE3B,MAAMC,QAAUA,KACdN,IAAI,EAGN,MAAMO,YAAcA,KAClB,GAAIC,cAAcC,aAAe,WAC/BH,eAEAI,YAAYC,iBAAiB,OAAQL,QACvC,EAGF,MAAMM,eAAiBA,KACrBF,YAAYG,oBAAoB,OAAQP,QAAQ,EAGlD,GAAIL,WACFM,cAGF,MAAO,CACLD,gBACAC,wBACAK,8BACD"}